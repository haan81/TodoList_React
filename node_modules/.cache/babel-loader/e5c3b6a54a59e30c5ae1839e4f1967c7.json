{"ast":null,"code":"import _classCallCheck from \"/home/haan/todo-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/haan/todo-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/haan/todo-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/haan/todo-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/haan/todo-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/haan/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.id = 3;\n    _this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: ' 리액트 소개',\n        checked: false\n      }, {\n        id: 1,\n        text: ' No not Key in by hangul',\n        checked: true\n      }, {\n        id: 2,\n        text: ' Weight Training',\n        checked: false\n      }]\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        input: e.target.value\n      });\n    };\n\n    _this.handleCreate = function () {\n      var _this$state = _this.state,\n          input = _this$state.input,\n          todos = _this$state.todos;\n\n      _this.setState({\n        input: '',\n        // 인풋 비우고\n        // concat 을 사용하여 배열에 추가\n        todos: todos.concat({\n          id: _this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    _this.handelKeyPress = function (e) {\n      // 눌려진 키가 Enter 면 handleCreate 호출\n      if (e.key === 'Enter') {\n        _this.handleCreate();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var input = this.state.input;\n      var handleChange = this.handleChange,\n          handleCreate = this.handleCreate,\n          handelKeyPress = this.handelKeyPress;\n      return React.createElement(TodoListTemplate, {\n        form: React.createElement(Form, {\n          value: input,\n          onKeyPress: handelKeyPress,\n          onChange: handleChange,\n          onCreate: handleCreate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(TodoItemList, {\n        todos: this.state.todos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/haan/todo-list/src/App.js"],"names":["React","Component","TodoListTemplate","Form","TodoItemList","App","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handelKeyPress","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,E,GAAK,C;UAELC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,CACL;AAAEH,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OADK,EAEL;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,IAAI,EAAE,0BAAf;AAA2CC,QAAAA,OAAO,EAAE;AAApD,OAFK,EAGL;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,IAAI,EAAE,kBAAf;AAAmCC,QAAAA,OAAO,EAAE;AAA5C,OAHK;AAFD,K;;UASRC,Y,GAAa,UAACC,CAAD,EAAK;AACjB,YAAKC,QAAL,CAAc;AACbN,QAAAA,KAAK,EAAEK,CAAC,CAACE,MAAF,CAASC;AADH,OAAd;AAGA,K;;UAEDC,Y,GAAa,YAAI;AAAA,wBACI,MAAKV,KADT;AAAA,UACVC,KADU,eACVA,KADU;AAAA,UACHC,KADG,eACHA,KADG;;AAEhB,YAAKK,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,EADK;AACD;AACV;AACAC,QAAAA,KAAK,EAAEA,KAAK,CAACS,MAAN,CAAa;AACnBZ,UAAAA,EAAE,EAAE,MAAKA,EAAL,EADe;AAEnBI,UAAAA,IAAI,EAAEF,KAFa;AAGnBG,UAAAA,OAAO,EAAC;AAHW,SAAb;AAHI,OAAd;AASA,K;;UAEDQ,c,GAAe,UAACN,CAAD,EAAK;AACnB;AACA,UAAGA,CAAC,CAACO,GAAF,KAAQ,OAAX,EAAmB;AAClB,cAAKH,YAAL;AACA;AAED,K;;;;;;;6BAEQ;AAAA,UACFT,KADE,GACK,KAAKD,KADV,CACFC,KADE;AAAA,UAGPI,YAHO,GAMN,IANM,CAGPA,YAHO;AAAA,UAIPK,YAJO,GAMN,IANM,CAIPA,YAJO;AAAA,UAKPE,cALO,GAMN,IANM,CAKPA,cALO;AAQP,aACE,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EACrB,oBAAC,IAAD;AACC,UAAA,KAAK,EAAEX,KADR;AAEC,UAAA,UAAU,EAAEW,cAFb;AAGC,UAAA,QAAQ,EAAEP,YAHX;AAIC,UAAA,QAAQ,EAAEK,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD;;;;EA3DeR,S;;AA8DlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\n\nclass App extends Component {\n  id = 3 // 이미 0,1,2 가 존재하므로 3으로 설정\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: ' 리액트 소개', checked: false },\n      { id: 1, text: ' No not Key in by hangul', checked: true },\n      { id: 2, text: ' Weight Training', checked: false }\n    ]\n  }\n  \n  handleChange=(e)=>{\n  \tthis.setState({\n  \t\tinput: e.target.value\n  \t});\n  }\n// 눌려진 키가 Enter 면 handleCreate 호출\n  handleCreate=()=>{\n  \tconst{input, todos}=this.state;\n  \tthis.setState({\n  \t  input: '', // 인풋 비우고\n      // concat 을 사용하여 배열에 추가\n      todos: todos.concat({\n      \tid: this.id++,\n      \ttext: input,\n      \tchecked:false\n      })\n  \t});\n  }\n\n  handelKeyPress=(e)=>{\n  \t// 눌려진 키가 Enter 면 handleCreate 호출\n  \tif(e.key==='Enter'){\n  \t\tthis.handleCreate();\n  \t}\n\n  }\n\n  render() {\n  \tconst{input}=this.state;\n  \tconst{\n  \t\thandleChange,\n  \t\thandleCreate,\n  \t\thandelKeyPress\n  \t}=this;\n\n    return (\n      <TodoListTemplate form={(\n      \t<Form\n      \t\tvalue={input}\n      \t\tonKeyPress={handelKeyPress}\n      \t\tonChange={handleChange}\n      \t\tonCreate={handleCreate}\n      \t/>\n      )}>\n        <TodoItemList todos={this.state.todos}/>\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}